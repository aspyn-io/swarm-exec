name: "Swarm Exec"
description: "Wait for a Docker Swarm service container to become healthy (or running) and exec a command in it, even across nodes. Optionally probes /healthz inside the container."
author: "Aspyn Engineering"
branding:
  icon: "anchor"
  color: "blue"

inputs:
  docker_host:
    description: "DOCKER_HOST (e.g. ssh://opsadmin@swarm-manager)"
    required: true
  service:
    description: "Swarm service name (e.g. example_app)"
    required: true
  command:
    description: "Command to execute inside the container"
    required: false
    default: "php artisan migrate"
  ssh_user:
    description: "SSH user for connecting to remote Swarm nodes"
    required: false
    default: "opsadmin"
  timeout_seconds:
    description: "Max time (seconds) to wait for readiness"
    required: false
    default: "600"
  interval_seconds:
    description: "Polling interval (seconds)"
    required: false
    default: "5"
  use_healthz:
    description: "If true, also probe healthz_url inside the container and accept HTTP 200 as ready"
    required: false
    default: "true"
  healthz_url:
    description: "URL to probe inside the container (loopback). Example: http://127.0.0.1/healthz"
    required: false
    default: "http://127.0.0.1/healthz"

runs:
  using: "composite"
  steps:
    - name: Prepare environment
      shell: bash
      run: |
        mkdir -p ~/.ssh
        chmod 700 ~/.ssh

    - name: Swarm Exec
      shell: bash
      env:
        DOCKER_HOST: ${{ inputs.docker_host }}
        SERVICE: ${{ inputs.service }}
        CMD: ${{ inputs.command }}
        SSH_USER: ${{ inputs.ssh_user }}
        TIMEOUT: ${{ inputs.timeout_seconds }}
        INTERVAL: ${{ inputs.interval_seconds }}
        USE_HEALTHZ: ${{ inputs.use_healthz }}
        HEALTHZ_URL: ${{ inputs.healthz_url }}
      run: bash scripts/swarm-exec.sh
